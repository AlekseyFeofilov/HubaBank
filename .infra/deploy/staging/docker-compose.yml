version: '3.8'
services:

  gateway-client:
    image: registry.gitlab.com/hits-tsu/huba/gateway-client:latest
    container_name: hits-huba-gateway-client
    ports:
      - "9001:8080"
    environment:
      ConnectionStrings__DefaultConnection: Server=hits-huba-database;Port=5432;Database=gateway_client_service;Username=postgres;Password='${POSTGRES_PASSWORD}'
      ASPNETCORE_ENVIRONMENT: Staging
      RABBITMQ_HOST: hits-huba-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: huba
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_VHOST: huba
    volumes:
      - ./gateway-client/appsettings.Staging.json:/app/appsettings.Staging.json:ro
    healthcheck:
      test: curl --fail http://localhost:8080/swagger/index.html || exit 1
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 10s
    labels:
      io.portainer.accesscontrol.teams: hubabank
    networks:
      - 'hits-huba-network'
    restart: always

  gateway-employer:
    image: registry.gitlab.com/hits-tsu/huba/gateway-employer:latest
    container_name: hits-huba-gateway-employer
    ports:
      - "9002:80"
    environment:
      ConnectionStrings__DefaultConnection: Server=gatewayEmployeeDB;Port=5432;Database=gatewayEmployeeDatabase;Username=postgres;Password=asd123
      ASPNETCORE_ENVIRONMENT: Staging
      RABBITMQ_HOST: hits-huba-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: huba
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_VHOST: huba
    volumes:
      - ./gateway-employer/appsettings.Staging.json:/app/appsettings.Staging.json:ro
    healthcheck:
      test: curl --fail http://localhost/index.html || exit 1
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 10s
    labels:
      io.portainer.accesscontrol.teams: hubabank
    networks:
      - 'hits-huba-network'
    restart: always

  core:
    image: registry.gitlab.com/hits-tsu/huba/core:latest
    container_name: hits-huba-core
    ports:
      - "9004:8080"
    environment:
      POSTGRES_HOST: hits-huba-database
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: core_service
      RABBITMQ_HOST: hits-huba-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: huba
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_VHOST: huba
      USERS_SERVICE_URL: http://hits-huba-users:8080/users/api/v1/
      CURRENCY_SERVICE_URL: https://api.currencyapi.com/v3/
      CURRENCY_API_KEY: ${CURRENCY_API_KEY}
      LOGGER_SERVICE_URL: http://hits-huba-logger:8080/log/api/v1/
    healthcheck:
      test: curl --fail http://localhost:8080/health || exit 1
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 10s
    labels:
      io.portainer.accesscontrol.teams: hubabank
    networks:
      - 'hits-huba-network'
    restart: always

  users:
    image: registry.gitlab.com/hits-tsu/huba/users:latest
    container_name: hits-huba-users
    ports:
      - "9003:8080"
    environment:
      POSTGRES_HOST: hits-huba-database
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASS: ${POSTGRES_PASSWORD}
      POSTGRES_SCHEMA: users_service
    healthcheck:
      test: curl --fail http://localhost:8080/swagger-ui/index.html || exit 1
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 10s
    labels:
      io.portainer.accesscontrol.teams: hubabank
    networks:
      - 'hits-huba-network'
    restart: always

  credit:
    image: registry.gitlab.com/hits-tsu/huba/credit:latest
    container_name: hits-huba-credit
    ports:
      - "9005:8080"
    environment:
      ConnectionStrings__Postgres: Server=hits-huba-database;Port=5432;Database=credit_service;Username=postgres;Password='${POSTGRES_PASSWORD}';Application Name=credit;Pooling=true;Maximum Pool Size=4;Connection idle Lifetime=60;Max Auto Prepare=1000
      ConnectionStrings__Hangfire: Server=hits-huba-database;Port=5432;Database=credit_service;Username=postgres;Password='${POSTGRES_PASSWORD}';Application Name=credit;Pooling=true;Maximum Pool Size=4;Connection idle Lifetime=60;Max Auto Prepare=1000
      ASPNETCORE_ENVIRONMENT: Staging
      RABBITMQ_HOST: hits-huba-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: huba
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_VHOST: huba
    volumes:
      - ./credit/appsettings.Staging.json:/app/appsettings.Staging.json:ro
    healthcheck:
      test: curl --fail http://localhost:8080/swagger/index.html || exit 1
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 10s
    labels:
      io.portainer.accesscontrol.teams: hubabank
    networks:
      - 'hits-huba-network'
    restart: always

  logger:
    image: registry.gitlab.com/hits-tsu/huba/logger:latest
    container_name: hits-huba-logger
    ports:
      - "9006:8080"
    environment:
      POSTGRES_HOST: hits-huba-database
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASS: ${POSTGRES_PASSWORD}
      POSTGRES_SCHEMA: logger_service
    healthcheck:
      test: curl --fail http://localhost:8080/swagger-ui/index.html || exit 1
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 10s
    labels:
      io.portainer.accesscontrol.teams: hubabank
    networks:
      - 'hits-huba-network'
    restart: always

  grafana:
    image: grafana/grafana:10.4.2
    container_name: hits-huba-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
    networks:
      - 'hits-huba-network'
    restart: always

  database:
    image: postgres:16.1-alpine3.19
    container_name: hits-huba-database
    ports:
      - '9000:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d:ro
    networks:
      - 'hits-huba-network'
    restart: always

  rabbitmq1:
    image: rabbitmq:3-management
    hostname: rabbitmq1
    environment:
      RABBITMQ_DEFAULT_USER: huba
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: huba
    volumes:
      - ./rabbitmq/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./rabbitmq/cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
    networks:
      - 'hits-huba-rabbitmq-cluster-network'
    restart: always

  rabbitmq2:
    image: rabbitmq:3-management
    hostname: rabbitmq2
    depends_on:
      - rabbitmq1
    environment:
      - JOIN_CLUSTER_HOST=rabbitmq1
    volumes:
      - ./rabbitmq/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./rabbitmq/cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
    entrypoint: /usr/local/bin/cluster-entrypoint.sh
    networks:
      - 'hits-huba-rabbitmq-cluster-network'
    restart: always

  rabbitmq3:
    image: rabbitmq:3-management
    hostname: rabbitmq3
    depends_on:
      - rabbitmq1
    environment:
      - JOIN_CLUSTER_HOST=rabbitmq1
    volumes:
      - ./rabbitmq/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./rabbitmq/cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
    entrypoint: /usr/local/bin/cluster-entrypoint.sh
    networks:
      - 'hits-huba-rabbitmq-cluster-network'
    restart: always

  rabbitmq-haproxy:
    image: haproxy:1.7
    container_name: hits-huba-rabbitmq
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - rabbitmq1
      - rabbitmq2
      - rabbitmq3
    ports:
      - '15672:15672'
      - '5672:5672'
    networks:
      - 'hits-huba-network'
      - 'hits-huba-rabbitmq-cluster-network'
    restart: always

networks:
  hits-huba-network:
  hits-huba-rabbitmq-cluster-network:
